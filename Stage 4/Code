# Load necessary libraries
library(shiny)
library(ggplot2)
library(TCGAbiolinks)
library(KEGGREST)
library(SummarizedExperiment)

# Helper function to parse enrichment results and extract GO terms and FDR values
parse_enrichment_results <- function(result) {
  if (is.null(result) || nrow(result) == 0) {
    return(NULL)
  }
  
  parsed_data <- data.frame(
    GO_Term = sapply(result, function(x) {
      split_res <- strsplit(x, "~")
      if (length(split_res[[1]]) > 1) {
        return(split_res[[1]][2])
      } else {
        return(NA)
      }
    }),
    FDR = sapply(result, function(x) {
      match <- regmatches(x, regexpr("FDR=\\s*[0-9.eE-]+", x))
      if (length(match) > 0) {
        return(as.numeric(sub("FDR=\\s*", "", match)))
      } else {
        return(NA)
      }
    }),
    stringsAsFactors = FALSE
  )
  
  parsed_data <- parsed_data[!is.na(parsed_data$FDR) & parsed_data$FDR > 0, ]
  parsed_data <- parsed_data[order(parsed_data$FDR), ]
  return(parsed_data)
}

# Define UI for the app
ui <- fluidPage(
  tags$style(HTML("
    body {
      background-color: #f9fafb;
      font-family: Arial, sans-serif;
    }
    h1 {
      color: #2c3e50;
      font-size: 3em;
      text-align: center;
      margin-bottom: 20px;
    }
    p, li {
      color: #34495e;
      font-size: 1.2em;
      text-align: left;
      margin-left: 10px;
    }
    .navbar {
      background-color: #2980b9;
    }
    .navbar-brand {
      color: white !important;
      font-weight: bold;
    }
    .tab-content {
      padding: 20px;
    }
    .btn-primary {
      background-color: #3498db;
      border-color: #2980b9;
    }
  ")),
  
  # Navigation bar with tabs
  navbarPage("Gene Pathway Analysis Dashboard",
             
             # Home tab
             tabPanel("Home",
                      fluidPage(
                        h1("Welcome to the Gene Pathway Analysis Dashboard"),
                        p("This dashboard allows you to perform functional enrichment analysis and KEGG pathway analysis based on a list of genes."),
                        h3("How to Use the Dashboard"),
                        p("Follow these steps to use the dashboard:"),
                        tags$ul(
                          tags$li("Step 1: You can either type a list of genes in the 'Gene List Input' box or upload a CSV file containing your gene list."),
                          tags$li("Step 2: Click 'Run Analysis' to start the enrichment analysis."),
                          tags$li("Step 3: The results will be displayed in different tabs: 'Biological Process', 'Cellular Component', 'Molecular Function', and 'KEGG Pathways'.")
                        ),
                        p("Feel free to explore the different analysis results and visualize the pathways and functional categories for your genes.")
                      )),
             
             # Analysis tab
             tabPanel("Gene Pathway Analysis",
                      sidebarLayout(
                        sidebarPanel(
                          h3("Gene List Input"),
                          textAreaInput("geneText", "Enter gene list (comma-separated):", "", 
                                        rows = 5, placeholder = "e.g., TP53, BRCA1, KRAS"),
                          fileInput("geneFile", "Upload your gene list (CSV)", accept = ".csv"),
                          actionButton("runAnalysis", "Run Analysis", class = "btn-primary"),
                          helpText("You can either type in your gene list or upload a CSV file.")
                        ),
                        mainPanel(
                          tabsetPanel(
                            tabPanel("Biological Process", plotOutput("BPplot"), textOutput("BPtext")),
                            tabPanel("Cellular Component", plotOutput("CCplot"), textOutput("CCtext")),
                            tabPanel("Molecular Function", plotOutput("MFplot"), textOutput("MFtext")),
                            tabPanel("KEGG Pathways", plotOutput("KEGGplot"), textOutput("KEGGtext"))
                          )
                        )
                      ))
  )
)

# Define server logic
server <- function(input, output, session) {
  
  gene_list <- reactiveVal(NULL)
  analysis_results <- reactiveValues(
    BP = NULL, CC = NULL, MF = NULL, KEGG = NULL
  )
  
  observeEvent(input$runAnalysis, {
    
    showNotification("Processing gene list...", duration = 5, type = "message")
    
    gene_list_data <- NULL
    
    if (!is.null(input$geneFile)) {
      gene_list_data <- read.csv(input$geneFile$datapath, header = TRUE)
      gene_list_data <- gene_list_data[, 1]  # Assuming gene names in the first column
      showNotification("Using uploaded gene list for analysis...", duration = 5, type = "message")
      
    } else if (input$geneText != "") {
      gene_list_data <- unlist(strsplit(input$geneText, ","))
      gene_list_data <- trimws(gene_list_data)  # Remove any surrounding whitespace
      showNotification("Using typed gene list for analysis...", duration = 5, type = "message")
    }
    
    if (is.null(gene_list_data) || length(gene_list_data) == 0) {
      showNotification("Please provide a gene list.", type = "error", duration = 5)
      return(NULL)
    }
    
    gene_list(gene_list_data)
    
    showNotification("Performing enrichment analysis...", duration = 5, type = "message")
    
    # Perform KEGG and GO enrichment analysis
    kegg_pathways <- list()
    for (gene in gene_list_data) {
      pathways <- keggFind("pathway", gene)
      if (length(pathways) > 0) {
        kegg_pathways[[gene]] <- pathways
      }
    }
    
    if (length(kegg_pathways) == 0) {
      showNotification("No KEGG pathways found for the provided gene list.", type = "error", duration = 5)
      return(NULL)
    }
    
    parsed_BP <- parse_enrichment_results(TCGAanalyze_EAcomplete(TFname = "BP", RegulonList = gene_list_data)$ResBP)
    parsed_MF <- parse_enrichment_results(TCGAanalyze_EAcomplete(TFname = "MF", RegulonList = gene_list_data)$ResMF)
    parsed_CC <- parse_enrichment_results(TCGAanalyze_EAcomplete(TFname = "CC", RegulonList = gene_list_data)$ResCC)
    
    # Store results in reactiveValues for visualization
    analysis_results$BP <- parsed_BP
    analysis_results$MF <- parsed_MF
    analysis_results$CC <- parsed_CC
    analysis_results$KEGG <- kegg_pathways
    
    # Display the plots
    output$BPplot <- renderPlot({
      if (!is.null(parsed_BP) && nrow(parsed_BP) > 0) {
        ggplot(parsed_BP[1:10, ], aes(x = reorder(GO_Term, FDR), y = -log10(FDR))) +
          geom_bar(stat = "identity", fill = "steelblue") +
          coord_flip() +
          labs(title = "Top 10 Biological Processes", x = "GO Term (Biological Process)", y = "-log10(FDR)")
      } else {
        plot.new()  # Create a new empty plot
        title("No Biological Process results to display")
      }
    })
    
    output$CCplot <- renderPlot({
      if (!is.null(parsed_CC) && nrow(parsed_CC) > 0) {
        ggplot(parsed_CC[1:10, ], aes(x = reorder(GO_Term, FDR), y = -log10(FDR))) +
          geom_bar(stat = "identity", fill = "tomato") +
          coord_flip() +
          labs(title = "Top 10 Cellular Components", x = "GO Term (Cellular Component)", y = "-log10(FDR)")
      } else {
        plot.new()  # Create a new empty plot
        title("No Cellular Component results to display")
      }
    })
    
    output$MFplot <- renderPlot({
      if (!is.null(parsed_MF) && nrow(parsed_MF) > 0) {
        ggplot(parsed_MF[1:10, ], aes(x = reorder(GO_Term, FDR), y = -log10(FDR))) +
          geom_bar(stat = "identity", fill = "forestgreen") +
          coord_flip() +
          labs(title = "Top 10 Molecular Functions", x = "GO Term (Molecular Function)", y = "-log10(FDR)")
      } else {
        plot.new()  # Create a new empty plot
        title("No Molecular Function results to display")
      }
    })
    
    output$KEGGplot <- renderPlot({
      if (length(kegg_pathways) > 0) {
        pathway_counts <- sapply(kegg_pathways, length)
        bar_data <- data.frame(Gene = names(pathway_counts), Pathways = pathway_counts)
        
        ggplot(bar_data, aes(x = reorder(Gene, Pathways), y = Pathways)) +
          geom_bar(stat = "identity", fill = "purple") +
          coord_flip() +
          labs(title = "Number of KEGG Pathways per Gene", x = "Gene", y = "Number of Pathways")
      } else {
        plot.new()  # Create a new empty plot
        title("No KEGG Pathway results to display")
      }
    })
    
    # Add interpretation text for each section
    output$BPtext <- renderText({
      "Biological Process: This graph shows the top 10 biological processes enriched in the gene list based on the GO enrichment analysis. A lower FDR value indicates higher significance."
    })
    
    output$CCtext <- renderText({
      "Cellular Component: This graph shows the cellular components in which the provided genes are most commonly found. The lower the FDR, the higher the significance of the component."
    })
    
    output$MFtext <- renderText({
      "Molecular Function: The bar plot represents the molecular functions most significantly associated with the input genes, based on GO enrichment."
    })
    
    output$KEGGtext <- renderText({
      "KEGG Pathways: This graph shows the number of KEGG pathways associated with each gene. It helps to identify the signaling and metabolic pathways involving your input genes."
    })
  })
}


